{"ast":null,"code":"var _jsxFileName = \"/Users/akasic/dev/react-tutorial/src/Api.js\";\nimport React, { Component } from \"react\";\nimport Form from \"./Form\";\nimport Table from \"./Table\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      comicStrips: []\n    };\n\n    this.removeComicStrip = index => {\n      let comicStrips = this.state.comicStrips;\n      this.setState({\n        comicStrips: comicStrips.filter((comicStrip, i) => {\n          return i !== index;\n        })\n      });\n    };\n\n    this.handleSubmit = comicStrip => {\n      this.setState({\n        comicStrips: [...this.state.comicStrips, comicStrip]\n      });\n    };\n  }\n\n  // Code is invoked after the component is mounted/inserted into the DOM tree.\n  componentDidMount() {\n    const url = \"http://stapi.co/api/v1/rest/comicStrip/search\";\n    fetch(url).then(result => result.json()).then(result => {\n      this.setState({\n        comicStrips: result.comicStrips.slice(0, 4)\n      });\n    });\n  }\n\n  render() {\n    const comicStrips = this.state.comicStrips;\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(Table, {\n      comicStripData: comicStrips,\n      removeComicStrip: this.removeComicStrip,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }), React.createElement(Form, {\n      handleSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/akasic/dev/react-tutorial/src/Api.js"],"names":["React","Component","Form","Table","App","state","comicStrips","removeComicStrip","index","setState","filter","comicStrip","i","handleSubmit","componentDidMount","url","fetch","then","result","json","slice","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,KAAP,MAAkB,SAAlB;;AAEA,MAAMC,GAAN,SAAkBH,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAC1BI,KAD0B,GAClB;AACNC,MAAAA,WAAW,EAAE;AADP,KADkB;;AAAA,SAkB1BC,gBAlB0B,GAkBPC,KAAK,IAAI;AAAA,UACpBF,WADoB,GACJ,KAAKD,KADD,CACpBC,WADoB;AAG1B,WAAKG,QAAL,CAAc;AACZH,QAAAA,WAAW,EAAEA,WAAW,CAACI,MAAZ,CAAmB,CAACC,UAAD,EAAaC,CAAb,KAAmB;AACjD,iBAAOA,CAAC,KAAKJ,KAAb;AACD,SAFY;AADD,OAAd;AAKD,KA1ByB;;AAAA,SA4B1BK,YA5B0B,GA4BXF,UAAU,IAAI;AAC3B,WAAKF,QAAL,CAAc;AAAEH,QAAAA,WAAW,EAAE,CAAC,GAAG,KAAKD,KAAL,CAAWC,WAAf,EAA4BK,UAA5B;AAAf,OAAd;AACD,KA9ByB;AAAA;;AAK1B;AACAG,EAAAA,iBAAiB,GAAG;AAClB,UAAMC,GAAG,GAAG,+CAAZ;AAEAC,IAAAA,KAAK,CAACD,GAAD,CAAL,CACGE,IADH,CACQC,MAAM,IAAIA,MAAM,CAACC,IAAP,EADlB,EAEGF,IAFH,CAEQC,MAAM,IAAI;AACd,WAAKT,QAAL,CAAc;AACZH,QAAAA,WAAW,EAAEY,MAAM,CAACZ,WAAP,CAAmBc,KAAnB,CAAyB,CAAzB,EAA4B,CAA5B;AADD,OAAd;AAGD,KANH;AAOD;;AAgBDC,EAAAA,MAAM,GAAG;AAAA,UACCf,WADD,GACiB,KAAKD,KADtB,CACCC,WADD;AAGP,WACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AACE,MAAA,cAAc,EAAEA,WADlB;AAEE,MAAA,gBAAgB,EAAE,KAAKC,gBAFzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAKE,oBAAC,IAAD;AAAM,MAAA,YAAY,EAAE,KAAKM,YAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,CADF;AASD;;AA5CyB;;AA+C5B,eAAeT,GAAf","sourcesContent":["import React, { Component } from \"react\";\nimport Form from \"./Form\";\nimport Table from \"./Table\";\n\nclass App extends Component {\n  state = {\n    comicStrips: []\n  };\n\n  // Code is invoked after the component is mounted/inserted into the DOM tree.\n  componentDidMount() {\n    const url = \"http://stapi.co/api/v1/rest/comicStrip/search\";\n\n    fetch(url)\n      .then(result => result.json())\n      .then(result => {\n        this.setState({\n          comicStrips: result.comicStrips.slice(0, 4)\n        });\n      });\n  }\n\n  removeComicStrip = index => {\n    let { comicStrips } = this.state;\n\n    this.setState({\n      comicStrips: comicStrips.filter((comicStrip, i) => {\n        return i !== index;\n      })\n    });\n  };\n\n  handleSubmit = comicStrip => {\n    this.setState({ comicStrips: [...this.state.comicStrips, comicStrip] });\n  };\n\n  render() {\n    const { comicStrips } = this.state;\n\n    return (\n      <div className=\"container\">\n        <Table\n          comicStripData={comicStrips}\n          removeComicStrip={this.removeComicStrip}\n        />\n        <Form handleSubmit={this.handleSubmit} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}