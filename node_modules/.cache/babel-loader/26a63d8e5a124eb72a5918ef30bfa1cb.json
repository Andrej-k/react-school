{"ast":null,"code":"var _jsxFileName = \"/Users/akasic/dev/react-tutorial/src/Api.js\";\nimport React, { Component } from \"react\";\nimport Form from \"./Form\";\nimport Table from \"./Table\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      animals: []\n    };\n\n    this.removeAnimal = index => {\n      let animals = this.state.animals;\n      animals = animals.slice(0, 4);\n      this.setState({\n        animals: animals.filter((animal, i) => {\n          return i !== index;\n        })\n      });\n    };\n\n    this.handleSubmit = animal => {\n      this.setState({\n        animals: [...this.state.animals, animal]\n      });\n    };\n  }\n\n  // Code is invoked after the component is mounted/inserted into the DOM tree.\n  componentDidMount() {\n    const url = \"http://stapi.co/api/v1/rest/animal/search\";\n    fetch(url).then(result => result.json()).then(result => {\n      this.setState({\n        animals: result.animals\n      });\n    });\n  }\n\n  //   render() {\n  //     const { data } = this.state;\n  //     const result = data.map((entry, index) => {\n  //       return <li key={index}>{entry.name}</li>;\n  //     });\n  //     return <ul>{result}</ul>;\n  //   }\n  render() {\n    const animals = this.state.animals;\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(Table, {\n      animalData: animals,\n      removeAnimal: this.removeAnimal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }), React.createElement(Form, {\n      handleSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/akasic/dev/react-tutorial/src/Api.js"],"names":["React","Component","Form","Table","App","state","animals","removeAnimal","index","slice","setState","filter","animal","i","handleSubmit","componentDidMount","url","fetch","then","result","json","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,KAAP,MAAkB,SAAlB;;AAEA,MAAMC,GAAN,SAAkBH,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAC1BI,KAD0B,GAClB;AACNC,MAAAA,OAAO,EAAE;AADH,KADkB;;AAAA,SAkB1BC,YAlB0B,GAkBXC,KAAK,IAAI;AAAA,UAChBF,OADgB,GACJ,KAAKD,KADD,CAChBC,OADgB;AAGtBA,MAAAA,OAAO,GAAGA,OAAO,CAACG,KAAR,CAAc,CAAd,EAAiB,CAAjB,CAAV;AAEA,WAAKC,QAAL,CAAc;AACZJ,QAAAA,OAAO,EAAEA,OAAO,CAACK,MAAR,CAAe,CAACC,MAAD,EAASC,CAAT,KAAe;AACrC,iBAAOA,CAAC,KAAKL,KAAb;AACD,SAFQ;AADG,OAAd;AAKD,KA5ByB;;AAAA,SA8B1BM,YA9B0B,GA8BXF,MAAM,IAAI;AACvB,WAAKF,QAAL,CAAc;AAAEJ,QAAAA,OAAO,EAAE,CAAC,GAAG,KAAKD,KAAL,CAAWC,OAAf,EAAwBM,MAAxB;AAAX,OAAd;AACD,KAhCyB;AAAA;;AAK1B;AACAG,EAAAA,iBAAiB,GAAG;AAClB,UAAMC,GAAG,GAAG,2CAAZ;AAEAC,IAAAA,KAAK,CAACD,GAAD,CAAL,CACGE,IADH,CACQC,MAAM,IAAIA,MAAM,CAACC,IAAP,EADlB,EAEGF,IAFH,CAEQC,MAAM,IAAI;AACd,WAAKT,QAAL,CAAc;AACZJ,QAAAA,OAAO,EAAEa,MAAM,CAACb;AADJ,OAAd;AAGD,KANH;AAOD;;AAkBD;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEAe,EAAAA,MAAM,GAAG;AAAA,UACCf,OADD,GACa,KAAKD,KADlB,CACCC,OADD;AAGP,WACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,UAAU,EAAEA,OAAnB;AAA4B,MAAA,YAAY,EAAE,KAAKC,YAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,IAAD;AAAM,MAAA,YAAY,EAAE,KAAKO,YAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AAMD;;AArDyB;;AAwD5B,eAAeV,GAAf","sourcesContent":["import React, { Component } from \"react\";\nimport Form from \"./Form\";\nimport Table from \"./Table\";\n\nclass App extends Component {\n  state = {\n    animals: []\n  };\n\n  // Code is invoked after the component is mounted/inserted into the DOM tree.\n  componentDidMount() {\n    const url = \"http://stapi.co/api/v1/rest/animal/search\";\n\n    fetch(url)\n      .then(result => result.json())\n      .then(result => {\n        this.setState({\n          animals: result.animals\n        });\n      });\n  }\n\n  removeAnimal = index => {\n    let { animals } = this.state;\n\n    animals = animals.slice(0, 4);\n\n    this.setState({\n      animals: animals.filter((animal, i) => {\n        return i !== index;\n      })\n    });\n  };\n\n  handleSubmit = animal => {\n    this.setState({ animals: [...this.state.animals, animal] });\n  };\n\n  //   render() {\n  //     const { data } = this.state;\n\n  //     const result = data.map((entry, index) => {\n  //       return <li key={index}>{entry.name}</li>;\n  //     });\n\n  //     return <ul>{result}</ul>;\n  //   }\n\n  render() {\n    const { animals } = this.state;\n\n    return (\n      <div className=\"container\">\n        <Table animalData={animals} removeAnimal={this.removeAnimal} />\n        <Form handleSubmit={this.handleSubmit} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}